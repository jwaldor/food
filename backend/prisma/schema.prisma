// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Vendor {
  id               Int               @id @default(autoincrement())
  email            String            @unique
  password         String
  customerSessions CustomerSession[]
  menus            Menu[]            // New field to establish relationship with Menu
}

model CustomerSession {
  id       Int     @id @default(autoincrement())
  vendorId Int
  vendor   Vendor  @relation(fields: [vendorId], references: [id])
  orders   Order[]
}

model Menu {
  id             Int            @id @default(autoincrement())
  name           String
  vendorId       Int
  vendor         Vendor         @relation(fields: [vendorId], references: [id])
  menuCategories MenuCategory[]
}

model MenuCategory {
  id        Int        @id @default(autoincrement())
  name      String
  menuItems MenuItem[]
  menuId    Int
  menu      Menu       @relation(fields: [menuId], references: [id])
}

model MenuItem {
  id            Int          @id @default(autoincrement())
  name          String
  price         Decimal
  categoryId    Int
  category      MenuCategory @relation(fields: [categoryId], references: [id])
  orderItems    OrderItem[]
}

model Order {
  id               Int             @id @default(autoincrement())
  customerSessionId Int
  customerSession  CustomerSession @relation(fields: [customerSessionId], references: [id])
  orderItems       OrderItem[]
}

model OrderItem {
  id         Int      @id @default(autoincrement())
  orderId    Int
  order      Order    @relation(fields: [orderId], references: [id])
  menuItemId Int
  menuItem   MenuItem @relation(fields: [menuItemId], references: [id])
  quantity   Int
}

